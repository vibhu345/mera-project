# it helps us to serve our project as a package
from setuptools import find_packages,setup
# 1я╕ПтГг setuptools тЖТ Python рдХреА рдПрдХ рд▓рд╛рдЗрдмреНрд░реЗрд░реА рд╣реИ, рдЬреЛ Python рдкреИрдХреЗрдЬ рдмрдирд╛рдиреЗ рдФрд░ рдЗрдВрд╕реНрдЯреЙрд▓ рдХрд░рдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддреА рд╣реИред
# 2я╕ПтГг find_packages() тЖТ рдпрд╣ рдЕрдкрдиреЗ рдЖрдк рдкреНрд░реЛрдЬреЗрдХреНрдЯ рдореЗрдВ рдореМрдЬреВрдж рд╕рд╛рд░реЗ рдкреИрдХреЗрдЬ (folders рдЬрд┐рдирдореЗрдВ __init__.py рд╣реЛ) рдХреЛ рдвреВрдВрдврддрд╛ рд╣реИред
# 3я╕ПтГг setup() тЖТ рдпрд╣ Python рдкреИрдХреЗрдЬ рдХреА рдЬрд╛рдирдХрд╛рд░реА рд╕реЗрдЯ рдХрд░рддрд╛ рд╣реИ (рдЬреИрд╕реЗ рдкреИрдХреЗрдЬ рдХрд╛ рдирд╛рдо, рд╡рд░реНрдЬрд╝рди, рдЬрд╝рд░реВрд░реА рд▓рд╛рдЗрдмреНрд░реЗрд░реА рдЖрджрд┐)ред
from typing import List
# Python рдореЗрдВ List рдХреЛ рд╡реИрд╕реЗ рд╣реА рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ, рд▓реЗрдХрд┐рди рдЯрд╛рдЗрдк рд╣рд┐рдВрдЯрд┐рдВрдЧ (Type Hinting) рдХреЛ рдЖрд╕рд╛рди рдмрдирд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╣рдо typing рд▓рд╛рдЗрдмреНрд░реЗрд░реА рд╕реЗ List рдЗрдореНрдкреЛрд░реНрдЯ рдХрд░рддреЗ рд╣реИрдВред
# ЁЯФ╣ рдмрд┐рдирд╛ рдЯрд╛рдЗрдк рд╣рд┐рдВрдЯрд┐рдВрдЧ (Normal Python List ie without typing list)
# def add_numbers(numbers):
#     return sum(numbers)
# рдпрд╣ рдХрд╛рдо рдХрд░реЗрдЧрд╛, рд▓реЗрдХрд┐рди рдЗрд╕рдореЗрдВ рдпрд╣ рдирд╣реАрдВ рдмрддрд╛рдпрд╛ рдЧрдпрд╛ рдХрд┐ numbers рдореЗрдВ Integer рд╣реЛрдВрдЧреЗ рдпрд╛ рдХреБрдЫ рдФрд░ред

#  typing.List рдХреЗ рд╕рд╛рде (Type Hinting рд╡рд╛рд▓рд╛ Python List)
# from typing import List

# def add_numbers(numbers: List[int]) -> int:
#     return sum(numbers)
#  рдЕрдм рдпрд╣ рд╕рд╛рдл рд╣реИ рдХрд┐ numbers рдХреА рд▓рд┐рд╕реНрдЯ рдореЗрдВ рд╕рд┐рд░реНрдл Integer рд╣реЛрдВрдЧреЗ рдФрд░ рдлрдВрдХреНрд╢рди Integer рд╣реА рд▓реМрдЯрд╛рдПрдЧрд╛ред
def requirements_yaha_se(file_path:str)->List[str]:
    requirements=[]
    with open(file_path) as file_obj:
# open(file_path) тЖТ рдпрд╣ file_path рдирд╛рдо рдХреА рдлрд╝рд╛рдЗрд▓ рдХреЛ рдУрдкрди (рдЦреЛрд▓рддрд╛) рдХрд░рддрд╛ рд╣реИред
# as file_obj тЖТ рдЗрд╕ рдлрд╝рд╛рдЗрд▓ рдХреЛ file_obj рдирд╛рдо рдХреА рд╡реЗрд░рд┐рдПрдмрд▓ рдореЗрдВ рд╕реНрдЯреЛрд░ рдХрд░рддрд╛ рд╣реИ рддрд╛рдХрд┐ рд╣рдо рдЗрд╕реЗ рдЖрд╕рд╛рдиреА рд╕реЗ рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░ рд╕рдХреЗрдВред
# with рдХрд╛ рдЙрдкрдпреЛрдЧ тЖТ рдпрд╣ рдлрд╝рд╛рдЗрд▓ рдХреЛ рдСрдЯреЛрдореЗрдЯрд┐рдХрд▓реА рдмрдВрдж рдХрд░ рджреЗрддрд╛ рд╣реИ рдЬрдм рдЙрд╕рдХрд╛ рдХрд╛рдо рдкреВрд░рд╛ рд╣реЛ рдЬрд╛рддрд╛ рд╣реИ, рдЗрд╕рд▓рд┐рдП file.close() рд▓рд┐рдЦрдиреЗ рдХреА рдЬрд░реВрд░рдд рдирд╣реАрдВ рд╣реЛрддреАред
        requirements=file_obj.readlines()
        requirements=[req.replace("\n","") for req in requirements]
    return requirements

setup(
    name="fault_detection",
    version="0.0.1", # version kuch bhi de do
    author="Vibhanshu",
    author_mail='vibhanshugupta875@gmail.com',
    install_requirements=requirements_yaha_se("requirements.txt"),# humne saari requirement pehle hi requirements file mein likh li thi
    packages=find_packages()
)